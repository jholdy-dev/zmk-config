/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC           &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LEFT_SHIFT    &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp TAB
                                &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC           &trans  &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3    &kp EQUAL  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &bl BL_INC  &bl BL_DEC  &kp BSPC
&kp LEFT_SHIFT    &trans  &trans        &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6    &kp LEFT   &kp DOWN              &kp UP                 &kp RIGHT   &trans      &trans
&kp LEFT_CONTROL  &trans  &trans        &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9    &kp SLASH  &kp ASTERISK          &kp PLUS               &kp MINUS   &trans      &kp TAB
                                        &kp LGUI      &trans        &kp SPACE       &kp RET    &mo 3                 &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB           &trans  &trans  &trans     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &trans     &trans     &trans             &trans  &trans  &kp BSPC
&kp LEFT_SHIFT    &trans  &trans  &kp LC(T)  &kp LEFT_BRACE        &kp RIGHT_BRACE          &kp GRAVE  &kp SQT    &kp DOUBLE_QUOTES  &trans  &trans  &trans
&kp LEFT_CONTROL  &trans  &trans  &trans     &kp LEFT_BRACKET      &kp RIGHT_BRACKET        &kp TILDE  &kp CARET  &kp BACKSLASH      &trans  &trans  &trans
                                  &kp LGUI   &trans                &kp SPACE                &kp RET    &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0    &kp C_BRI_UP  &kp C_BRI_DEC     &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_MUTE  &trans
&trans  &trans        &bt BT_PRV    &bt BT_NXT    &trans        &trans          &kp C_PREV    &kp C_PLAY_PAUSE  &kp C_NEXT         &trans           &trans      &trans
&trans  &trans        &bl BL_INC    &bl BL_DEC    &trans        &bt BT_CLR      &trans        &trans            &trans             &trans           &trans      &trans
                                    &trans        &trans        &trans          &trans        &trans            &trans
            >;
        };
    };
};
